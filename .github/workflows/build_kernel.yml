name: Build GlowingKernel

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build, check branches in kernel_manifest for list'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout this repo (for workflow files)
      uses: actions/checkout@v4

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      with:
        retain: "docker_imgcache,docker_buildkit,container_tools"

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Install packages
      run: |
        sudo apt update
        sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full android-sdk-libsparse-utils erofs-utils \
        default-jdk git gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev \
        python3 make sudo gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc zlib1g-dev python-is-python3 libc6-dev libtinfo6 \
        make repo cpio kmod openssl libelf-dev pahole libssl-dev libarchive-tools zstd repo

    - name: Setup repo directory and init
      run: |
        mkdir s5e8845-kernel
        cd s5e8845-kernel
        repo init -u https://github.com/kastentop2005/kernel_manifest.git -b ${{ github.event.inputs.branch }}
        repo sync
        cd common
        git submodule update --init --recursive
      shell: bash

    - name: Modify build files before building
      run: |
        cd s5e8845-kernel
        sed -i "s/-maybe-dirty//g" "build/kernel/kleaf/impl/stamp.bzl"
        sed -i 's/--config=stamp//g' "build.sh"
      shell: bash

    - name: Build kernel
      run: |
        cd s5e8845-kernel
        ./build.sh
      shell: bash

    - name: Clone AnyKernel3
      run: |
        git clone https://github.com/exynos1480-dev/AnyKernel3.git
        cd AnyKernel3
      shell: bash

    - name: Copy Kernel Files to AnyKernel3
      run: |
        cd AnyKernel3
        cp ../s5e8845-kernel/out/s5e8845_user/dist/Image Image
      shell: bash

    - name: Package Kernel with AnyKernel3
      run: |
        cd AnyKernel3
        zip -r9 "GlowingKernel-V3-Artifact.zip" * -x .git README.md
      shell: bash

    - name: Upload boot.img artifact
      uses: actions/upload-artifact@v4
      with:
        name: Boot-Image-ZIP
        path: s5e8845-kernel/out/s5e8845_user/dist/boot.img

    - name: Upload AnyKernel3 Package
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-ZIP
        path: AnyKernel3/GlowingKernel-V3-Artifact.zip

    - name: Upload Image artifact
      uses: actions/upload-artifact@v4
      with:
        name: Kernel-Image-ZIP
        path: s5e8845-kernel/out/s5e8845_user/dist/Image

    - name: Determine Branch Type
      id: branch_type
      run: |
        if [[ "${{ github.event.inputs.branch }}" == *"permissive"* ]]; then
          echo "BRANCH_TYPE=Permissive" >> $GITHUB_ENV
        else
          echo "BRANCH_TYPE=Enforcing" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Send Telegram Message with Artifact
      uses: appleboy/telegram-action@master
      with:
        token: ${{ secrets.TELEGRAM_TOKEN }}
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        document: AnyKernel3/GlowingKernel-V3-Artifact.zip
        format: markdown
        message: |
          *Build Information*:
          *Branch*: ${{ github.event.inputs.branch }}
          *Clang Version*: 17.0.1 (r487747c)
          *Kernel*: 6.1.141
          *Type*: ${{ env.BRANCH_TYPE }}
          *Device*: Galaxy A55 5G
          *SoC*: s5e8845 (Exynos 1480)
          *NOTE: Don't use Enforcing builds on UI 8*
